<?xml version="1.0" encoding="UTF-8"?>

<!-- - Sample namespace-based configuration - -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<global-method-security pre-post-annotations="enabled">
		<!-- AspectJ pointcut expression that locates our "post" method and applies 
			security that way <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" 
			access="ROLE_TELLER"/> -->
	</global-method-security>

	<http use-expressions="true">
		<intercept-url pattern="/m/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/crud.jsp" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/s/**" access="isAuthenticated()" />
		<!-- Disable web URI authorization, as we're using <global-method-security> 
			and have @Secured the services layer instead <intercept-url pattern="/listAccounts.html" 
			access="isRememberMe()" /> <intercept-url pattern="/post.html" access="hasRole('ROLE_TELLER')" 
			/> -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/index.action"
			authentication-success-handler-ref="neoUserAuthenticationSuccessHandler"
			authentication-failure-handler-ref="neoUserAuthenticationFailureHandler" />
		<logout success-handler-ref="neoUserLogoutSuccessHandler" />
		<remember-me token-validity-seconds="2592000" />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have <session-management 
			invalid-session-url="/timeout.jsp"> <concurrency-control max-sessions="1" 
			error-if-maximum-exceeded="true" /> </session-management> -->

	</http>

	<!-- Usernames/Passwords are rod/koala dianne/emu scott/wombat peter/opal 
		<authentication-manager> <authentication-provider> <password-encoder hash="md5"/> 
		<user-service> <user name="rod" password="a564de63c2d0da68cf47586ee05984d7" 
		authorities="ROLE_ADMINISTRATOR, ROLE_USER" /> <user name="dianne" password="65d15fe9156f9c4bbffd98085992a44e" 
		authorities="ROLE_USER" /> <user name="scott" password="2b58af6dddbd072ed27ffc86725d7d3a" 
		authorities="ROLE_USER" /> <user name="peter" password="22b5c9accc6e1ba628cedc63a72d57f8" 
		authorities="ROLE_USER" /> </user-service> </authentication-provider> </authentication-manager> -->

	<beans:bean id="neoUserDetailsService" class="com.hlt.security.NeoUserDetailsService" />

	<authentication-manager>
		<authentication-provider user-service-ref="neoUserDetailsService" />
	</authentication-manager>


	<!-- Remember to add services-ref="neoRememberMeServices" into <remember-me/> 
		above if u have specified remember me logic <beans:bean id="neoRememberMeServices" 
		class="com.hlt.security.NeoTokenBasedRememberMeServices"> <beans:property 
		name="userDetailsService" ref="neoUserDetailsService"/> <beans:property name="key" 
		value="findbuy"/> </beans:bean> <beans:bean id="rememberMeAuthenticationProvider" 
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider"> 
		<beans:property name="key" value="findbuy"/> </beans:bean> -->

	<beans:bean id="neoUserLogoutSuccessHandler"
		class="com.hlt.security.NeoUserLogoutSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/"></beans:property>
	</beans:bean>
	<beans:bean id="neoUserAuthenticationSuccessHandler"
		class="com.hlt.security.NeoUserAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/s/home.action"></beans:property>
	</beans:bean>
	<beans:bean id="neoUserAuthenticationFailureHandler"
		class="com.hlt.security.NeoUserAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/index.action?error=true"></beans:property>
	</beans:bean>
</beans:beans>
